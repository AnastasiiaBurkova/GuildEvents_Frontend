{"ast":null,"code":"var _jsxFileName = \"/Users/aburkova/Code/guild_events/Guild_Calendar_Frontend/src/pages/home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport momentTimezonePlugin from '@fullcalendar/moment-timezone';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [error, setError] = React.useState(false);\n  const [response, setResponse] = React.useState([]);\n\n  async function fetchData() {\n    var date = new Date();\n    date.setMinutes(0);\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n\n    try {\n      const guilds = ['AK', 'AS', 'Athene', 'IK', 'Inkubio', 'KIK', 'MK', 'PJK', 'PT', 'TIK', 'TF', 'Prodeko', 'FK'];\n      const guildQuery = guilds.map(g => `guildNames=${g}`).join('&');\n      const startDateTimeQuery = `startDateTimeFrame=${date.toISOString()}`;\n      const endDateTimeQuery = `endDateTimeFrame=${getNext4MonthsEvents()}`;\n      await Promise.all([await fetch(`https://apim-whatsthehaps.azure-api.net/v1/events?${guildQuery}&${startDateTimeQuery}&${endDateTimeQuery}`, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(res => res.json()).then(data => {\n        var dataString = JSON.stringify(data.response);\n        var result = JSON.parse(dataString);\n        console.log(\"result \", result);\n        setResponse(result);\n      })]);\n    } catch (error) {\n      console.log(error);\n      setError(true);\n    }\n  }\n\n  React.useEffect(() => {\n    fetchData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function getNext4MonthsEvents() {\n    var date = new Date();\n    date.setMinutes(0);\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    date.setMonth(date.getMonth() + 4);\n    return date.toISOString();\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Oops.. something went wrong! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: response.length > 0 && response.map(list => /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, momentTimezonePlugin],\n      initialView: \"timeGridDay\",\n      contentHeight: \"auto\",\n      validRange: {\n        start: new Date(),\n        end: getNext4MonthsEvents()\n      },\n      eventTimeFormat: {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      } //headerToolbar={false}\n      //dayHeaders={false}\n      ,\n      dayHeaderContent: Object.keys(list)[0],\n      dayHeaderClassNames: \"guild-name \" + Object.keys(list)[0],\n      slotMinTime: \"08:00:00\",\n      slotMaxTime: \"24:00:00\",\n      events: Object.values(list)[0] //eventColor=\"#CF9FFF\"\n      ,\n      eventColor: list.color,\n      nowIndicator: true,\n      eventClick: e => {\n        Swal.fire({\n          title: e.event.title,\n          html: \"<br>Description: \" + e.event.extendedProps.description + \"<br>\" + \"<br> Location: \" + e.event.extendedProps.location + \"<br>\" + \"<br>Organizer: \" + e.event.extendedProps.guild\n        });\n      },\n      timeZone: \"Europe/Helsinki\"\n    }, Object.keys(list)[0], false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Home, \"uI1k1uzOGQKTJYCQYVZAN4y1ifk=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","momentTimezonePlugin","Swal","Home","error","setError","useState","response","setResponse","fetchData","date","Date","setMinutes","setSeconds","setMilliseconds","guilds","guildQuery","map","g","join","startDateTimeQuery","toISOString","endDateTimeQuery","getNext4MonthsEvents","Promise","all","fetch","method","headers","then","res","json","data","dataString","JSON","stringify","result","parse","console","log","useEffect","setMonth","getMonth","length","list","start","end","hour","minute","hour12","Object","keys","values","color","e","fire","title","event","html","extendedProps","description","location","guild"],"sources":["/Users/aburkova/Code/guild_events/Guild_Calendar_Frontend/src/pages/home.js"],"sourcesContent":["import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport momentTimezonePlugin from '@fullcalendar/moment-timezone';\nimport Swal from 'sweetalert2';\n\nconst Home = () => {\n\n  const [error, setError] = React.useState(false);\n  const [response, setResponse] = React.useState([]);\n\n  async function fetchData() {\n    var date = new Date();\n    date.setMinutes(0);\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    try {\n      const guilds = ['AK', 'AS', 'Athene', 'IK', 'Inkubio', 'KIK', 'MK', 'PJK', 'PT', 'TIK', 'TF', 'Prodeko', 'FK'];\n      const guildQuery = guilds.map(g => `guildNames=${g}`).join('&');\n      const startDateTimeQuery = `startDateTimeFrame=${date.toISOString()}`;\n      const endDateTimeQuery = `endDateTimeFrame=${getNext4MonthsEvents()}`;\n      await Promise.all([\n       (\n         await fetch(`https://apim-whatsthehaps.azure-api.net/v1/events?${guildQuery}&${startDateTimeQuery}&${endDateTimeQuery}`, {\n          method: 'GET',\n          headers: {'Content-type': 'application/json; charset=UTF-8'},\n        }).then((res) => res.json())\n        .then((data) => {\n          var dataString = JSON.stringify(data.response);\n          var result = JSON.parse(dataString);\n          console.log(\"result \", result);    \n          setResponse(result);\n        }))\n     ]);\n   } catch (error) {\n     console.log(error);\n     setError(true);\n   }\n }\n \n React.useEffect(() => {\n   fetchData();\n // eslint-disable-next-line react-hooks/exhaustive-deps\n }, []);\n\n function getNext4MonthsEvents(){\n  var date = new Date();\n  date.setMinutes(0);\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n  date.setMonth(date.getMonth() + 4);\n  return date.toISOString();\n}\n\n if(error) {\n  return (\n  <h1> Oops.. something went wrong! </h1>\n  )\n}\n\nreturn (  \n  \n  <div className='container'>\n    {response.length > 0 && response.map((list) =>  (\n      \n     <FullCalendar     \n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, momentTimezonePlugin]}\n        initialView=\"timeGridDay\"\n        contentHeight={\"auto\"}\n        validRange={{\n        start: new Date(),\n        end: getNext4MonthsEvents()\n        }}\n        eventTimeFormat={{hour:'2-digit', minute: '2-digit', hour12: false}}\n        //headerToolbar={false}\n        //dayHeaders={false}\n        dayHeaderContent={Object.keys(list)[0]}\n        dayHeaderClassNames={\"guild-name \" + Object.keys(list)[0] }\n        slotMinTime={\"08:00:00\"}\n        slotMaxTime={\"24:00:00\"}\n        key={Object.keys(list)[0]}\n        events={Object.values(list)[0]}\n        //eventColor=\"#CF9FFF\"\n        eventColor={list.color}\n        nowIndicator\n        eventClick={(e) => {\n          Swal.fire({\n            title: e.event.title,\n            html:\"<br>Description: \" + e.event.extendedProps.description + \"<br>\"+ \n            \"<br> Location: \" + e.event.extendedProps.location + \"<br>\"+\n            \"<br>Organizer: \" + e.event.extendedProps.guild\n        }) \n          \n        }}\n        timeZone=\"Europe/Helsinki\"\n      />\n    \n    ))}\n    </div>      \n  );\n\n\n\n};\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}